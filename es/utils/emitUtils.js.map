{"version":3,"file":"emitUtils.js","sourceRoot":"","sources":["../../src/utils/emitUtils.ts"],"names":[],"mappings":"AACA,OAAO,SAAS,MAAM,cAAc,CAAC;AACrC,IAAM,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAE5B,IAAM,YAAY,GAAG;IACnB,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa;QACzC,CAAC,CAAC,mDAAmD;QACrD,CAAC,CAAC,mDAAmD,CAAC;AAC5D,CAAC,CAAC;AAEF;IAAA;QAAA,iBA4GC;QA3GC,aAAQ,GAAG,UAAC,CAAS,EAAE,GAAgB;YAAhB,oBAAA,EAAA,QAAgB;YACrC,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACjC,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;gBACxB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;aACpC;YACD,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC9D,CAAC,CAAC;QA8BF,gBAAW,GAAG,UAAC,CAAS,EAAE,GAAY;YACpC,IAAI,CAAC,CAAC;gBAAE,OAAO,EAAE,CAAC;YAClB,IAAI,CAAC,GAAG,EAAE;gBACR,GAAG,GAAG,CAAC,CAAC;aACT;YACD,IAAI,CAAC,CAAC,MAAM,IAAI,EAAE,EAAE;gBAClB,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;aACtE;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,oBAAe,GAAG,UAAC,QAAkB;YACnC,IAAM,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC3C,IACE,QAAQ,CAAC,QAAQ,KAAK,YAAY,EAAE;gBACpC,QAAQ,CAAC,MAAM;oBACb,kEAAkE,EACpE;gBACA,OAAO,QAAQ,CAAC;aACjB;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,cAAS,GAAG,UAAC,CAAS,EAAE,OAAoB;YAApB,wBAAA,EAAA,YAAoB;YAC1C,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS,CAC/D,SAAA,EAAE,EAAI,OAAO,CAAA,CACd,CAAC;QACJ,CAAC,CAAC;QAEF,gBAAW,GAAG,UAAC,CAAS,EAAE,OAAoB;YAApB,wBAAA,EAAA,YAAoB;YAC5C,OAAO,KAAI,CAAC,UAAU,CACpB,IAAI,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,SAAA,EAAE,EAAI,OAAO,CAAA,CAAC,EACzE,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;QA0BF,eAAU,GAAG,UAAC,OAAe;YAC3B,OAAO,UAAG,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,kBAAkB,EAAE,cAAI,IAAI,IAAI,CACjE,OAAO,GAAG,IAAI,CACf,CAAC,kBAAkB,EAAE,CAAE,CAAC;QAC3B,CAAC,CAAC;IAMJ,CAAC;IAlGC,2BAAO,GAAP,UAAQ,CAAS;QACf,IAAI,CAAC,CAAC,EAAE;YACN,OAAO,EAAE,CAAC;SACX;QACD,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC1C,CAAC;IAED,mCAAmC;IACnC,cAAc;IACd,iBAAiB;IACjB,MAAM;IACN,eAAe;IACf,uEAAuE;IACvE,MAAM;IACN,2CAA2C;IAC3C,IAAI;IAEJ,8BAAU,GAAV,UAAW,CAAM,EAAE,OAAoB;QAApB,wBAAA,EAAA,YAAoB;QACrC,IAAM,EAAE,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAA,EAAE,EAAI,OAAO,CAAA,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACrE,OAAO,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzE,CAAC;IAED,0BAAM,GAAN,UAAO,CAAS;QACd,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;aACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;aAC9C,QAAQ,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAsCD,8BAAU,GAAV,UAAW,CAA0C,EAAE,MAAc;QACnE,IAAI,CAAC,CAAC,EAAE;YACN,OAAO,GAAG,CAAC;SACZ;QACD,IAAM,GAAG,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QACxC,IAAM,EAAE,GAAG;YACT,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;YACxB,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE;YAC3B,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE;YAC3B,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE;YAC3B,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE;YAC5B,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE;YAC5B,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE;SAC7B,CAAC;QACF,IAAM,EAAE,GAAG,0BAA0B,CAAC;QACtC,IAAI,CAAC,CAAC;QACN,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;gBACtB,MAAM;aACP;SACF;QACD,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC9E,CAAC;IAQD,4BAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,OAAO,SAAA,CAAC,EAAI,CAAC,CAAA,CAAC;IAChB,CAAC;IACH,gBAAC;AAAD,CAAC,AA5GD,IA4GC;AACD,IAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;AAElC,eAAe,SAAS,CAAC","sourcesContent":["import { Category } from \"@emit-technology/emit-lib\";\nimport BigNumber from \"bignumber.js\";\nconst BN = require(\"bn.js\");\n\nconst NODE_ADDRESS = (): string => {\n  return process.env.NODE_ENV === \"development\"\n      ? \"EYwQ9VJXjeeYpS7xjjPBgAojgcRQbo5VFvAhaRVrBXVhUEyAt\"\n      : \"EaWt4Q2yLcthiETUJNadA1ihHiP4JDd4uPtSN4Rku74PS5aoi\";\n};\n\nclass EmitUtils {\n  strToHex = (v: string, len: number = 32) => {\n    const buf = Buffer.alloc(len, 0);\n    const dataBuf = Buffer.from(v);\n    if (dataBuf.length > len) {\n      throw new Error(\"str is too long\");\n    }\n    return buf.fill(dataBuf, 0, dataBuf.length).toString(\"hex\");\n  };\n\n  fromHex(v: string): any {\n    if (!v) {\n      return \"\";\n    }\n    return Buffer.from(v, \"hex\").toString();\n  }\n\n  // toHex(v: string, len?: number) {\n  //   if (!v) {\n  //     return \"\";\n  //   }\n  //   if (len) {\n  //     return new BN(v).toArrayLike(Buffer, \"le\", len).toString(\"hex\");\n  //   }\n  //   return Buffer.from(v).toString(\"hex\");\n  // }\n\n  toValueHex(v: any, decimal: number = 18) {\n    const cv = new BigNumber(v).multipliedBy(10 ** decimal).toString(16);\n    return new BN(cv, \"hex\").toArrayLike(Buffer, \"le\", 32).toString(\"hex\");\n  }\n\n  toHash(v: string): string {\n    return Buffer.alloc(32, 0)\n      .fill(Buffer.from(v), 0, Buffer.from(v).length)\n      .toString(\"hex\");\n  }\n\n  ellipsisStr = (v: string, num?: number): string => {\n    if (!v) return \"\";\n    if (!num) {\n      num = 7;\n    }\n    if (v.length >= 15) {\n      return v.slice(0, num) + \" ... \" + v.slice(v.length - num, v.length);\n    }\n    return v;\n  };\n\n  getCategoryName = (category: Category): string => {\n    const name = this.fromHex(category.symbol);\n    if (\n      category.supplier === NODE_ADDRESS() &&\n      category.symbol ===\n        \"0000000000000000000000000000000000000000000000000000000000000000\"\n    ) {\n      return \"EASTER\";\n    }\n    return name;\n  };\n\n  fromValue = (v: string, decimal: number = 18): BigNumber => {\n    return new BigNumber(new BN(v, \"hex\", \"le\").toString()).dividedBy(\n      10 ** decimal\n    );\n  };\n\n  formatValue = (v: string, decimal: number = 18): string => {\n    return this.nFormatter(\n      new BigNumber(new BN(v, \"hex\", \"le\").toString()).dividedBy(10 ** decimal),\n      5\n    );\n  };\n\n  nFormatter(n: number | BigNumber | string | undefined, digits: number) {\n    if (!n) {\n      return \"0\";\n    }\n    const num = new BigNumber(n).toNumber();\n    const si = [\n      { value: 1, symbol: \"\" },\n      { value: 1e3, symbol: \"K\" },\n      { value: 1e6, symbol: \"M\" },\n      { value: 1e9, symbol: \"G\" },\n      { value: 1e12, symbol: \"T\" },\n      { value: 1e15, symbol: \"P\" },\n      { value: 1e18, symbol: \"E\" },\n    ];\n    const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    let i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  }\n\n  formatDate = (seconds: number) => {\n    return `${new Date(seconds * 1000).toLocaleTimeString()} ${new Date(\n      seconds * 1000\n    ).toLocaleDateString()}`;\n  };\n\n  testMath() {\n    console.log(\"TestMathPow\");\n    return 1 ** 2;\n  }\n}\nconst emitUtils = new EmitUtils();\n\nexport default emitUtils;\n"]}