{"version":3,"file":"web3Provider.js","sourceRoot":"","sources":["../../src/provider/web3Provider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,YAAY,CAAC;AAG5C,OAAO,EAAC,QAAQ,EAAQ,QAAQ,EAAC,SAAS,EAAC,MAAM,UAAU,CAAC;AAE5D,IAAM,cAAc,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACvD,IAAM,gBAAgB,GAAG,OAAO,CAAC,qDAAqD,CAAC,CAAC;AACxF,IAAM,kBAAkB,GAAG,OAAO,CAAC,uDAAuD,CAAC,CAAC;AAC5F,IAAM,iBAAiB,GAAG,OAAO,CAAC,uDAAuD,CAAC,CAAC;AAC3F,IAAM,uBAAuB,GAAG,OAAO,CAAC,6DAA6D,CAAC,CAAC;AACvG,IAAM,gBAAgB,GAAG,OAAO,CAAC,6DAA6D,CAAC,CAAC;AAChG,IAAM,wBAAwB,GAAG,OAAO,CAAC,6DAA6D,CAAC,CAAC;AAKxG;IAOI,qBACY,MAAe,EACf,uBAAoE;QADpE,WAAM,GAAN,MAAM,CAAS;QACf,4BAAuB,GAAvB,uBAAuB,CAA6C;QAE5E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IACzC,CAAC;IAED,wCAAkB,GAAlB,UAAmB,eAAuB;QACtC,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;IAC5C,CAAC;IAED,mCAAa,GAAb,UAAc,OAA0B;QACpC,IAAM,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;QACxC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC;IACrC,CAAC;IAEO,mCAAa,GAArB;QAAA,iBAoNC;QAnNG,8BAA8B;QAC9B,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,cAAc,CAAC,EAAC,eAAe,EAAC,CAAC,GAAC,EAAE,GAAC,IAAI,EAAC,CAAC,CAAC,CAAA,YAAY;QAC1E,IAAI,KAAK,GAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,KAAK,MAAM,EAAC;YACtC,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtC;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,UAAC,OAAY,EAAE,QAAa;YAC3C,uEAAuE;YACvE,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC7B,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBAC/B,KAAI,CAAC,MAAM,CAAC,SAAS,CACjB;wBACI,OAAO,EAAE,KAAK;wBACd,EAAE,EAAE,EAAE;wBACN,MAAM,EAAE,OAAO;wBACf,MAAM,EAAE,QAAQ,IAAI,EAAE;qBACzB,EACD,UAAC,KAAU,EAAE,QAAa;wBACtB,IAAI,KAAK,EAAE;4BACP,MAAM,CAAC,KAAK,CAAC,CAAC;yBACjB;6BAAM;4BACH,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;yBAC5B;oBACL,CAAC,CACJ,CAAC;gBACN,CAAC,CAAC,CAAC;aACN;YAED,6EAA6E;YAC7E,IAAI,QAAQ,EAAE;gBACV,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACzC,OAAO;aACV;YAED,IAAI,MAAM,GAAQ,IAAI,CAAC;YACvB,QAAQ,OAAO,CAAC,MAAM,EAAE;gBACpB,KAAK,cAAc;oBACf,MAAM,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBAC9D,MAAM;gBAEV,KAAK,cAAc;oBACf,MAAM,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBAC9D,MAAM;gBAEV,KAAK,aAAa;oBACd,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC;oBACvB,MAAM;gBAEV,KAAK,qBAAqB;oBACtB,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,UAAC,CAAM,IAAK,OAAA,CAAC,EAAD,CAAC,CAAC,CAAC;oBAC9C,MAAM,GAAG,IAAI,CAAC;oBACd,MAAM;gBAEV;oBACI,IAAM,OAAO,GAAG,yEACZ,OAAO,CAAC,MAAM,mCACc,CAAC;oBACjC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;aAChC;YAED,OAAO;gBACH,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,MAAM,QAAA;aACT,CAAC;QACN,CAAC,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,WAAW,CACnB,IAAI,kBAAkB,CAAC;YACnB,kBAAkB,EAAE,gBAAS,IAAI,CAAC,MAAM,CAAC,OAAO,gBAAa;YAC7D,aAAa,EAAE,KAAK;YACpB,YAAY,EAAE,MAAM;YACpB,UAAU,EAAE,KAAK;YACjB,WAAW,EAAE,KAAK;SACrB,CAAC,CACL,CAAC;QAEF,cAAc;QACd,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,gBAAgB,EAAE,CAAC,CAAC;QAEhD,wBAAwB;QACxB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,wBAAwB,EAAE,CAAC,CAAC;QAExD,UAAU;QACV,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,iBAAiB,EAAE,CAAC,CAAC;QAEjD,gBAAgB;QAChB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,gBAAgB,EAAE,CAAC,CAAC;QAChD,EAAE;QACF,iBAAiB;QACjB,+CAA+C;QAC/C,2CAA2C;QAC3C,OAAO;QAEP,6BAA6B;QAC7B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACpB,SAAS,EAAE,UAAC,CAAM,IAAK,OAAA,CAAC,EAAD,CAAC;YACxB,aAAa,EAAE,UAAO,OAAY,EAAE,IAAc;;oBAC9C,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;wBACb,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;qBACnB;oBACD,IAAI,EAAE,CAAC;;;iBACV;SACJ,CAAC,CAAC;QAEH,iEAAiE;QACjE,IAAI,CAAC,MAAM,CAAC,WAAW,CACnB,IAAI,uBAAuB,CAAC;YACxB,WAAW,EAAE,UAAO,EAAoB;;;;gCACR,qBAAM,IAAI,CAAC,uBAAuB,EAAE,EAAA;;4BAA1D,mBAAmB,GAAG,SAAoC;4BACtC,qBAAM,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAA;;4BAAtE,KAAoB,SAAkD,EAApE,KAAK,WAAA,EAAE,MAAM,YAAA;4BACrB,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE;gCAClB,aAAa;gCACb,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;6BACrC;4BACD,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;iBACrB;YACD,eAAe,EAAE,UAAO,QAAa,EAAE,EAAoB;;;;gCAC3B,qBAAM,IAAI,CAAC,uBAAuB,EAAE,EAAA;;4BAA1D,mBAAmB,GAAG,SAAoC;4BACtC,qBAAM,mBAAmB,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAAA;;4BAApF,KAAoB,SAAgE,EAAlF,KAAK,WAAA,EAAE,MAAM,YAAA;4BACrB,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;iBACrB;YACD,WAAW,EAAE,UAAO,SAAc,EAAE,EAAoB;;;;gCACxB,qBAAM,IAAI,CAAC,uBAAuB,EAAE,EAAA;;4BAA1D,mBAAmB,GAAG,SAAoC;4BAC1D,MAAM,yBAAQ,SAAS,KAAE,eAAe,EAAE,aAAa,GAAE,CAAC;4BAChD,qBAAM,mBAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAA;;4BAApE,GAAG,GAAO,SAA0D;4BAClE,KAAK,GAAa,GAAG,MAAhB,EAAE,MAAM,GAAK,GAAG,OAAR,CAAS;4BAC9B,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;iBACrB;YACD,mBAAmB,EAAE,UAAO,SAAc,EAAE,EAAoB;;;;gCAChC,qBAAM,IAAI,CAAC,uBAAuB,EAAE,EAAA;;4BAA1D,mBAAmB,GAAG,SAAoC;4BAC1D,MAAM,yBAAQ,SAAS,KAAE,eAAe,EAAE,qBAAqB,GAAE,CAAC;4BACxD,qBAAM,mBAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAA;;4BAApE,GAAG,GAAO,SAA0D;4BAClE,KAAK,GAAa,GAAG,MAAhB,EAAE,MAAM,GAAK,GAAG,OAAR,CAAS;4BAC9B,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;iBACrB;YACD,gBAAgB,EAAE,UAAO,SAAc,EAAE,EAAoB;;;;gCAC7B,qBAAM,IAAI,CAAC,uBAAuB,EAAE,EAAA;;4BAA1D,mBAAmB,GAAG,SAAoC;4BAC1D,MAAM,yBAAQ,SAAS,KAAE,eAAe,EAAE,kBAAkB,GAAE,CAAC;4BAC3C,qBAAM,mBAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAA;;4BAA9E,KAAoB,SAA0D,EAA5E,KAAK,WAAA,EAAE,MAAM,YAAA;4BACrB,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;iBACrB;YACD,kBAAkB,EAAE,UAAO,SAAc,EAAE,EAAoB;;;;gCAC/B,qBAAM,IAAI,CAAC,uBAAuB,EAAE,EAAA;;4BAA1D,mBAAmB,GAAG,SAAoC;4BAC1D,MAAM,yBAAQ,SAAS,KAAE,eAAe,EAAE,oBAAoB,GAAE,CAAC;4BAC7C,qBAAM,mBAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAA;;4BAA9E,KAAoB,SAA0D,EAA5E,KAAK,WAAA,EAAE,MAAM,YAAA;4BACrB,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;iBACrB;YACD,kBAAkB,EAAE,UAAO,SAAc,EAAE,EAAoB;;;;gCAC/B,qBAAM,IAAI,CAAC,uBAAuB,EAAE,EAAA;;4BAA1D,mBAAmB,GAAG,SAAoC;4BAC1D,MAAM,yBAAQ,SAAS,KAAE,eAAe,EAAE,oBAAoB,GAAE,CAAC;4BAC7C,qBAAM,mBAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAA;;4BAA9E,KAAoB,SAA0D,EAA5E,KAAK,WAAA,EAAE,MAAM,YAAA;4BACrB,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;iBACrB;YACD,WAAW,EAAE,UAAO,QAAa,EAAE,EAAoB;;;;gCACvC,qBAAM,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAA;;4BAArC,GAAG,GAAG,SAA+B;4BAC3C,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;;;iBACjB;YACD,iDAAiD;YACjD,qBAAqB;YACrB,KAAK;SACR,CAAC,CACL,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACpB,SAAS,EAAE,UAAC,CAAM,IAAK,OAAA,CAAC,EAAD,CAAC;YACxB,aAAa,EAAE,UAAO,OAAY,EAAE,IAAc,EAAE,GAA8C;;;;gCAClE,qBAAM,IAAI,CAAC,uBAAuB,EAAE,EAAA;;4BAA1D,mBAAmB,GAAG,SAAoC;4BAChD,qBAAM,mBAAmB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,EAAA;;4BAA/D,GAAG,GAAO,SAAqD;4BAC7D,KAAK,GAAa,GAAG,MAAhB,EAAE,MAAM,GAAK,GAAG,OAAR,CAAS;4BAC9B,IAAI,OAAO,CAAC,MAAM,KAAK,aAAa,EAAE;gCAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gCACvB,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;6BAC9C;4BACD,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;iBACtB;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG;YACjB,OAAA,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBACxB,kEAAkE;gBAClE,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,cAAc,EAAE,EAAE,UAAC,KAAU,EAAE,QAAa;oBACxE,IAAI,KAAK,EAAE;wBACP,MAAM,CAAC,KAAK,CAAC,CAAC;qBACjB;yBAAM;wBACH,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;qBAC5B;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;QATF,CASE,CAAC;QAEP,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG;YACtB,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAU;YAC/B,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;gBACzE,OAAO,CAAC,IAAI,CAAC,iFAAiF,CAAC,CAAC;aACnG;iBAAM;gBACH,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACxB;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEO,sCAAgB,GAAxB,UAAyB,eAAoB;QACzC,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,WAAgB,IAAK,OAAA,WAAW,YAAY,eAAe,EAAtC,CAAsC,CAAC,CAAC;QAChH,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;IACrD,CAAC;IACL,kBAAC;AAAD,CAAC,AApPD,IAoPC","sourcesContent":["import { networkAdapter } from '../network';\nimport { INetwork, IMethods,IConfig } from '../types';\nimport { AsyncMethodReturns } from 'penpal';\nimport {getTxGas,IQuery,EthQuery,SeroQuery} from \"../utils\";\n\nconst ProviderEngine = require('web3-provider-engine');\nconst CacheSubprovider = require('web3-provider-engine/dist/es5/subproviders/cache.js');\nconst FixtureSubprovider = require('web3-provider-engine/dist/es5/subproviders/fixture.js');\nconst FilterSubprovider = require('web3-provider-engine/dist/es5/subproviders/filters.js');\nconst HookedWalletSubprovider = require('web3-provider-engine/dist/es5/subproviders/hooked-wallet.js');\nconst NonceSubprovider = require('web3-provider-engine/dist/es5/subproviders/nonce-tracker.js');\nconst SubscriptionsSubprovider = require('web3-provider-engine/dist/es5/subproviders/subscriptions.js');\n// const RpcSubprovider = require('web3-provider-engine/subproviders/rpc.js');\n\ntype ProviderCallback = (error: string | null, result: any) => void;\n\nexport class Web3Manager {\n\n    private engine: typeof ProviderEngine;\n    provider: typeof ProviderEngine;\n    private _selectedAddress?: string;\n    private _network?: string;\n\n    constructor(\n        private config: IConfig,\n        private _getWidgetCommunication: () => Promise<AsyncMethodReturns<IMethods>>,\n    ) {\n        this.provider = this._initProvider();\n    }\n\n    setSelectedAddress(selectedAddress: string) {\n        this._selectedAddress = selectedAddress;\n    }\n\n    changeNetwork(network: string | INetwork) {\n        const newNetwork = networkAdapter(network);\n        this.clearSubprovider(NonceSubprovider);\n        this.clearSubprovider(CacheSubprovider);\n        this.config.network = newNetwork;\n    }\n\n    private _initProvider() {\n        // don't init the engine twice\n        if (this.engine) {\n            return this.engine;\n        }\n\n        this.engine = new ProviderEngine({pollingInterval:5*60*1000});//300seconds\n        let query:IQuery = new EthQuery(this.engine);\n        if(this.config.network.chainId === \"sero\"){\n            query = new SeroQuery(this.engine);\n        }\n\n        this.engine.send = (payload: any, callback: any) => {\n            // Web3 1.0 beta.38 (and above) calls `send` with method and parameters\n            if (typeof payload === 'string') {\n                return new Promise((resolve, reject) => {\n                    this.engine.sendAsync(\n                        {\n                            jsonrpc: '2.0',\n                            id: 32,\n                            method: payload,\n                            params: callback || [],\n                        },\n                        (error: any, response: any) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                resolve(response.result);\n                            }\n                        },\n                    );\n                });\n            }\n\n            // Web3 1.0 beta.37 (and below) uses `send` with a callback for async queries\n            if (callback) {\n                this.engine.sendAsync(payload, callback);\n                return;\n            }\n\n            let result: any = null;\n            switch (payload.method) {\n                case 'eth_accounts':\n                    result = this._selectedAddress ? [this._selectedAddress] : [];\n                    break;\n\n                case 'eth_coinbase':\n                    result = this._selectedAddress ? [this._selectedAddress] : [];\n                    break;\n\n                case 'net_version':\n                    result = this._network;\n                    break;\n\n                case 'eth_uninstallFilter':\n                    this.engine.sendAsync(payload, (_: any) => _);\n                    result = true;\n                    break;\n\n                default:\n                    const message = `The EMIT Web3 object does not support synchronous methods like ${\n                        payload.method\n                    } without a callback parameter.`;\n                    throw new Error(message);\n            }\n\n            return {\n                id: payload.id,\n                jsonrpc: payload.jsonrpc,\n                result,\n            };\n        };\n\n        this.engine.addProvider(\n            new FixtureSubprovider({\n                web3_clientVersion: `EMIT/v${this.config.version}/javascript`,\n                net_listening: false,\n                eth_hashrate: '0x00',\n                eth_mining: false,\n                eth_syncing: false,\n            }),\n        );\n\n        // cache layer\n        this.engine.addProvider(new CacheSubprovider());\n\n        // subscriptions manager\n        this.engine.addProvider(new SubscriptionsSubprovider());\n\n        // filters\n        this.engine.addProvider(new FilterSubprovider());\n\n        // pending nonce\n        this.engine.addProvider(new NonceSubprovider());\n        //\n        // // data source\n        // this.engine.addProvider(new RpcSubprovider({\n        //     rpcUrl: this.config.network.nodeUrl,\n        // }));\n\n        // set default id when needed\n        this.engine.addProvider({\n            setEngine: (_: any) => _,\n            handleRequest: async (payload: any, next: () => {}) => {\n                if (!payload.id) {\n                    payload.id = 42;\n                }\n                next();\n            },\n        });\n\n        // main web3 functionality - carried out via widget communication\n        this.engine.addProvider(\n            new HookedWalletSubprovider({\n                getAccounts: async (cb: ProviderCallback) => {\n                    const widgetCommunication = await this._getWidgetCommunication();\n                    const { error, result } = await widgetCommunication.getAccounts(this.config);\n                    if (!error && result) {\n                        // @ts-ignore\n                        this._selectedAddress = result[0];\n                    }\n                    cb(error, result);\n                },\n                signTransaction: async (txParams: any, cb: ProviderCallback) => {\n                    const widgetCommunication = await this._getWidgetCommunication();\n                    const { error, result } = await widgetCommunication.signTransaction(txParams, this.config);\n                    cb(error, result);\n                },\n                signMessage: async (msgParams: any, cb: ProviderCallback) => {\n                    const widgetCommunication = await this._getWidgetCommunication();\n                    const params = { ...msgParams, messageStandard: 'signMessage' };\n                    const ret:any = await widgetCommunication.signMessage(params, this.config);\n                    const { error, result } = ret;\n                    cb(error, result);\n                },\n                signPersonalMessage: async (msgParams: any, cb: ProviderCallback) => {\n                    const widgetCommunication = await this._getWidgetCommunication();\n                    const params = { ...msgParams, messageStandard: 'signPersonalMessage' };\n                    const ret:any = await widgetCommunication.signMessage(params, this.config);\n                    const { error, result } = ret;\n                    cb(error, result);\n                },\n                signTypedMessage: async (msgParams: any, cb: ProviderCallback) => {\n                    const widgetCommunication = await this._getWidgetCommunication();\n                    const params = { ...msgParams, messageStandard: 'signTypedMessage' };\n                    const { error, result } = await widgetCommunication.signMessage(params, this.config);\n                    cb(error, result);\n                },\n                signTypedMessageV3: async (msgParams: any, cb: ProviderCallback) => {\n                    const widgetCommunication = await this._getWidgetCommunication();\n                    const params = { ...msgParams, messageStandard: 'signTypedMessageV3' };\n                    const { error, result } = await widgetCommunication.signMessage(params, this.config);\n                    cb(error, result);\n                },\n                signTypedMessageV4: async (msgParams: any, cb: ProviderCallback) => {\n                    const widgetCommunication = await this._getWidgetCommunication();\n                    const params = { ...msgParams, messageStandard: 'signTypedMessageV4' };\n                    const { error, result } = await widgetCommunication.signMessage(params, this.config);\n                    cb(error, result);\n                },\n                estimateGas: async (txParams: any, cb: ProviderCallback) => {\n                    const gas = await getTxGas(query, txParams);\n                    cb(null, gas);\n                },\n                // getGasPrice: async (cb: ProviderCallback) => {\n                //     cb(null, \"\" );\n                // },\n            }),\n        );\n\n        this.engine.addProvider({\n            setEngine: (_: any) => _,\n            handleRequest: async (payload: any, next: () => {}, end: (error: string | null, result: any) => {}) => {\n                const widgetCommunication = await this._getWidgetCommunication();\n                const ret:any = await widgetCommunication.relay(payload, this.config);\n                const { error, result } = ret;\n                if (payload.method === 'net_version') {\n                    this._network = result;\n                    this.engine.networkVersion = this._network;\n                }\n                end(error, result);\n            },\n        });\n\n        this.engine.enable = () =>\n            new Promise((resolve, reject) => {\n                //this.config.network.chainType == ChainType.SERO?\"sero_accounts\":\n                this.engine.sendAsync({ method: \"eth_accounts\" }, (error: any, response: any) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        resolve(response.result);\n                    }\n                });\n            });\n\n        this.engine.isConnected = () => {\n            return true;\n        };\n\n        this.engine.isEmit = true;\n\n        this.engine.on('error', (error: any) => {\n            if (error && error.message && error.message.includes('PollingBlockTracker')) {\n                console.warn('If you see this warning constantly, there might be an error with your RPC node.');\n            } else {\n                console.error(error);\n            }\n        });\n\n        this.engine.start();\n        return this.engine;\n    }\n\n    private clearSubprovider(subproviderType: any) {\n        const subprovider = this.provider._providers.find((subprovider: any) => subprovider instanceof subproviderType);\n        this.provider.removeProvider(subprovider);\n        this.provider.addProvider(new subproviderType());\n    }\n}\n"]}