{"version":3,"file":"widgetManager.js","sourceRoot":"","sources":["../../src/widget/widgetManager.ts"],"names":[],"mappings":"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","sourcesContent":["import {connectToChild} from 'penpal';\n\nimport { IConfig, IMethods, IWidget } from '../types';\n\nimport { onWindowLoad,validateSecureOrigin } from '../utils';\nimport { styles } from './styles';\n\n// Create a .env file to override the default WIDGET_URL when running locally\nconst EMIT_WIDGET_URL = process.env.EMIT_WIDGET_URL || 'https://accounts.emit.technology';\nconst EMIT_CONTAINER_CLASS = 'frame-emit-container';\n\nexport function windowLoadHandler() {\n    if (document.getElementsByClassName(EMIT_CONTAINER_CLASS).length) {\n        console.warn(\n            'EMIT script was already loaded. This might cause unexpected behavior. If loading with a script tag, please make sure that you only load it once.',\n        );\n    }\n}\n\nexport class WidgetManager {\n    private widgetPromise?: Promise<IWidget>;\n    private widgetInstance?: IWidget;\n    private _widgetUrl = EMIT_WIDGET_URL;\n    private _onActiveWalletChangedCallback?: (walletAddress: string) => void;\n    private _onErrorCallback: (error: Error) => void = () => {};\n\n    constructor(private _widgetConfig: IConfig) {\n        validateSecureOrigin();\n        WidgetManager._checkIfWidgetAlreadyInitialized();\n    }\n\n    // async singleton\n    async getWidget() {\n        if (!this.widgetInstance) {\n            if (!this.widgetPromise) {\n                this.widgetPromise = this._initWidget();\n            }\n            this.widgetInstance = await this.widgetPromise;\n        }\n        return this.widgetInstance;\n    }\n    // Population by the dev of SDK callbacks that might be invoked by the widget\n\n    setOnActiveWalletChangedCallback(callback: (walletAddress: string) => void) {\n        this._onActiveWalletChangedCallback = callback;\n    }\n\n    setOnErrorCallback(callback: (error: Error) => void) {\n        this._onErrorCallback = callback;\n    }\n\n    // SDK methods that could be invoked by the user and handled by the widget\n\n    async showWidget() {\n        const widgetCommunication = (await this.getWidget()).communication;\n        return widgetCommunication.showWidget(this._widgetConfig);\n    }\n\n    // internal methods\n\n    private static _checkIfWidgetAlreadyInitialized() {\n        if (document.getElementsByClassName(EMIT_CONTAINER_CLASS).length) {\n            console.warn(\n                'An instance of EMIT was already initialized. This is probably a mistake. Make sure that you use the same EMIT instance throughout your app.',\n            );\n        }\n    }\n\n    private async _initWidget(): Promise<IWidget> {\n        await onWindowLoad();\n\n        const style = document.createElement('style');\n        style.innerHTML = styles;\n\n        const container = document.createElement('div');\n        container.className = EMIT_CONTAINER_CLASS;\n\n        const widgetFrame = document.createElement('div');\n        widgetFrame.id = `emit-container-${Date.now()}`;\n        widgetFrame.className = EMIT_CONTAINER_CLASS;\n\n        const iframe = document.createElement('iframe');\n        iframe.src = this._widgetUrl;\n        iframe.style.position = 'absolute';\n        iframe.style.height = '100%';\n        iframe.style.width = '100%';\n        iframe.style.border = '0 transparent';\n\n        // This conditional is not Penpal-specific. It's merely\n        // an example of how you can add an iframe to the document.\n        if (\n            document.readyState === 'complete' ||\n            document.readyState === 'interactive'\n        ) {\n            widgetFrame.appendChild(iframe);\n            container.appendChild(widgetFrame);\n            document.body.appendChild(container);\n            document.head.appendChild(style);\n        } else {\n            document.addEventListener('DOMContentLoaded', () => {\n                widgetFrame.appendChild(iframe);\n                container.appendChild(widgetFrame);\n                document.body.appendChild(container);\n                document.head.appendChild(style);\n            });\n        }\n\n        const connection = connectToChild<IMethods>({\n            iframe:iframe,\n            methods: {\n                setHeight: this._setHeight.bind(this),\n                getWindowSize: WidgetManager._getWindowSize.bind(this),\n                onActiveWalletChanged: this._onActiveWalletChanged.bind(this),\n                hasOnActiveWalletChanged: this.hasOnActiveWalletChanged.bind(this),\n                onError: this._onError.bind(this),\n            },\n        });\n\n        const communication = await connection.promise;\n        await communication.setConfig(this._widgetConfig);\n\n        return { communication, widgetFrame };\n    }\n\n    private async _setHeight(height: number) {\n        const widgetFrame = (await this.getWidget()).widgetFrame;\n        widgetFrame.style.height = `${height}px`;\n    }\n\n    private static _getWindowSize() {\n        const body = document.getElementsByTagName('body')[0];\n        const width = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\n        const height = window.innerHeight || document.documentElement.clientHeight || body.clientHeight;\n        return { width, height };\n    }\n\n    private _onActiveWalletChanged(walletAddress: string) {\n        if (this._onActiveWalletChangedCallback) {\n            this._onActiveWalletChangedCallback(walletAddress);\n        }\n    }\n\n    private hasOnActiveWalletChanged(): boolean {\n        return !!this._onActiveWalletChangedCallback;\n    }\n\n    private _onError(error: Error) {\n        if (this._onErrorCallback) {\n            this._onErrorCallback(error);\n        }\n    }\n}\n"]}