{"version":3,"file":"block.js","sourceRoot":"","sources":["../../../src/types/emit/block.ts"],"names":[],"mappings":";;;AA4DO,IAAM,cAAc,GAAG;IAC5B,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAChC,OAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7B,CAAC,CAAC;AAHW,QAAA,cAAc,kBAGzB","sourcesContent":["export interface Block {\n  num: number;\n  timestamp: number;\n  parent_hash: string;\n  data_sets: Array<DataSet>;\n  factor_set: FactorSet;\n  data?: string;\n}\n\nexport interface FactorSet {\n  settles: Array<Settle>;\n  outs: Array<Out>;\n}\n\nexport interface Settle {\n  from: string;\n  num: number;\n  index: number;\n  factor: Factor;\n}\n\nexport interface OutFactor {\n  factor: Factor;\n  timestamp: number;\n}\n\nexport interface Factor {\n  category: Category;\n  value: string;\n}\n\nexport interface Category {\n  field: string; //address\n  name: string; //hash 32\n}\n\nexport interface Out {\n  target: string;\n  factor: Factor;\n}\n\nexport interface BlockWrapped {\n  hash: string;\n  block: Block;\n}\nexport interface DataSet {\n  name: string;\n  data: string;\n}\n\nexport interface PrepareBlock {\n  address: string;\n  blk: Block;\n}\n\nexport interface BlockRef {\n  num: number;\n  hash: string;\n}\n\nexport const getDefaultHash = (): string => {\n  const buf = Buffer.alloc(32, 0);\n  return buf.toString(\"hex\");\n};\n"]}